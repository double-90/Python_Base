
# GB2312 中国制定的编码，至少2个字节byte 才能表示1个字符（汉字、字母）

# ASCII 不兼容中文，1个字节表示1个字符（字母）
# Unicode 字符集把所有语言都统一到一套编码里，2个字节表示1个字符


# 字母A 
#       ASCII编码是十进制的65，二进制 01000001
#       Unicode编码是 00000000 01000001      
#       UTF 8 编码是 01000001  

#       Unicode编码比ASCII编码需要多一倍的存储空间
#       所以又转化出了 可变长编码 UTF8
#       UTF8 把一个Unicode字符根据不同的数字大小编码成1-6个字节,英文字母1个字节表示，汉字通常3个字节表示
#       可将ASCII编码看成UTF8编码的一部分（因为都用1个字节表示一个字母）

#       使用时为Unicode编码，保存到硬盘或传输时传为UTF8






# ord()函数获取字符的整数（十进制）表示  ord('A')  得到65

# chr()函数把编码转换为对应的字符  chr(66) 得到 'B'










####################### PS:以下内容比较杂乱，看前需要知道几个概念：#####################

'''
1、encode() ：将指定如字符串等类型的数据以某种编码的格式转换，转换后得到的是bytes类型的数据

    print('中文'.encode('utf-8'))           # b'\xe4\xb8\xad\xe6\x96\x87'

    print('中文'.encode('gb2312'))          # b'\xd6\xd0\xce\xc4'


2、decode() ：将bytes类型的数据以某种编码的格式转换，转换成 unicode编码的字符串类型

3、字符：Utf-8（中文：3个字节，英文：1个字节）

4、1 位（bit） = 8 字节（byte）
'''

#####################################################################################




# 最新的Python 3版本，内存中的字符串是以Unicode编码表示的，一个字符对应若干个字节

s = "中文"         

print(len('中文'))    




# 而在网络上传输，或者保存到磁盘上，就需要把以字符为单位的str 变为以字节为单位的bytes类型   # 纯英文转为ASCII编码的bytes类型   # 中文转为UTF-8编码的bytes类型


# 以Unicode表示的str通过encode()方法可以编码为指定编码类型的bytes

s1 = s.encode('utf-8')      # 选择以什么编码格式对字符串进行编码




# bytes类型的数据用带b前缀的单引号或双引号表示  如 b'ABC' 


print(s1)   # b'\xe4\xb8\xad\xe6\x96\x87'           # bytes的每个字符都只占用一个字节

print(len(s1))
print(len(b'\xe4\xb8\xad\xe6\x96\x87'))             # 1个中文字符经过UTF-8编码后通常会占用3个字节，而1个英文字符只占用1个字节



s2 = s1.decode('utf-8')

print(s2)   # 中文                              # 字符串
print(len(s2))









###  格式化字符串

print('Hello,%s' % 'xiaoming')   # 输出 Hello,xiaoming

print('Hi,%s,you have %d' % ('xiaohong',800))  # 输出 Hi,xiaohong,you have 800  

print(f'我说的是{s2}')

print('我说的是{0}'.format(s2))


# 常见的占位符有 
'''
%d	整数
%f	浮点数          #%.2f  保留小数点2位
%s	字符串
%x	十六进制整数
'''
# print('%d%%' % 80)   输出80%，后面%%为转义，表示一个%




##  另一种格式化字符串的方法是使用字符串的 format()方法

# print('Hello,{0},you have {1:.1f}%'.format("xiaomi",17.125))    输出 Hello,xiaomi,you have 17.1%




##  最后一种格式化字符串的方法是使用以f开头的字符串，称之为f-string

# s = 3.1415926

# print(f'圆周率取小数点后两位为：{s:.2f}')  输出 圆周率取小数点后两位为：3.14

